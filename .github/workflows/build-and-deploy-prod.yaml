name: Build-Deploy-Prod
on:
  push:
    branches:
      - 'master'
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/familie-ks-sak:${{ github.sha }}
  IMAGE_LATEST: docker.pkg.github.com/${{ github.repository }}/familie-ks-sak:latest
jobs:
  deploy-to-prod:
    name: Bygg app/image, push til github, deploy til prod-fss og dev-fss
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Read/save .m2 cache
        uses: actions/cache@v3.0.1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Sjekk at tag ligger p√• master
        run: |
          commit=$(git rev-parse --short HEAD)
          echo Checking for commit $commit
          if ! [[ $(git branch -r --contains "$commit" | grep -E '(^|\s)origin/master$') ]]; then exit 1; fi
      - name: Set up JDK 17
        uses: actions/setup-java@v3.1.0
        with:
          java-version: 17
          distribution: 'temurin'
      - name: Build with Maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn -B --no-transfer-progress package --settings .m2/maven-settings.xml --file pom.xml
      - name: Bygg Docker image
        run: |
          docker build -t ${IMAGE} -t ${IMAGE_LATEST} .
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Push Docker image med versjonstag
        run: docker push ${IMAGE}
      - name: Push Docker image med 'latest' tag
        run: docker push ${IMAGE_LATEST}
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: app-preprod.yaml
      - name: Deploy til prod-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-fss
          RESOURCE: app-prod.yaml
