name: Build-Deploy-Preprod
on:
  pull_request:
env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/familie-ks-sak:${{ github.sha }}
jobs:
  deploy-to-dev:
    name: Bygg app/image, push til github, deploy til dev-fss
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-cache-${{ hashFiles('pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-cache-
      - name: Build with Maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn package --settings .m2/maven-settings.xml --file pom.xml
      - name: SonarCloud
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_PROJECTKEY: ${{ secrets.SONAR_PROJECTKEY }}
          SONAR_LOGIN: ${{ secrets.SONAR_LOGIN }}
        run: mvn verify sonar:sonar --settings .m2/maven-settings.xml --file pom.xml
      - name: Bygg Docker image
        run: |
          echo Image: $IMAGE
          docker build -t $IMAGE .
      - name: Login to Github Package Registry
        env:
          DOCKER_USERNAME: x-access-token
          DOCKER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_USERNAME" --password-stdin docker.pkg.github.com
      - name: Push Docker image
        run: docker push $IMAGE
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: app-preprod.yaml
